version: '3.8'
services:
  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-myapp}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-myapp}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Your TypeScript Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ts_app
    restart: unless-stopped
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-myapp}
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - SESSION_SECRET=${SESSION_SECRET}
      - GEMINI=${GEMINI}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prisma-studio:
    image: node:lts-alpine3.17
    container_name: prisma_studio
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: sh -c "npm install prisma && npx prisma studio --port 5555 --browser none"
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-myapp}
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      app:
        condition: service_started

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge